java 17
maven 3.8.5

1) должны быть установленные тулы сверху
2) docker desktop по желанию (будут команды для cmd)

ЗАПУСК

Запуск локаный (без docker compose)
    1) поднять бд в докере:
        - docker run --name tasklistdb -p 5522:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=pass -e POSTGRES_DB=tasklist_db -d postgres

    2) далее запускать приложение через java -jar или в ide
        ссылка на swagger ui (как в .yaml):
        - localhost:8080/swagger/tsm-ui

    3) при запуске приложения в БД будет записан суперпользователь (его данные есть в .env):
        зарегистрироваться как пользователь - AuthController.signUp;
        далее авторизоваться в AuthController.signIn;

        для супер пользователя - AuthController.signIp;

        полученный в обоих вариантах access токен добавить в авторизацию (ui кнопка выше);

        создавать админов может только суперпользователь через AuthController.admins;

        !почта и имя пользователя должны быть уникальными для всех;

Запуск через docker compose
    1) запустить файл docker-compose.yaml
        или docker compose up -d

    2) сначала проиницализируется БД, потом только приложение
        как только видно, что в контейнере приложение поднялось - можно делать запросы;

    3) последовательность аналогична как и для запуска по отдельности:
        - ссылка на swagger (другой порт) -> localhost:8085/swagger/tsm-ui
        - авторизоваться как sudo или зарегистрироваться как новый пользователь
        - прикрепить токен для автоматической отправки;

    4) результаты сохранения в бд проверять в контейнере docker-compose !не в обычном!;


Эндроинты имеют свои ограничения, например, простой админ/пользователь не может создать sudo.
sudo может создавать админов или закреплять за кем-то задачи (как и admin),
    но не может создать комментарий не от себя (как и любой другой пользователь).
В эндпоинт refresh потребуется добавить refresh-токен в поле ввода и в автоматическую отправку (туда access или refresh)
    связано с тем, что необходимо его получение, но swagger ui не позволяет разделить
    (через постман достаточно добавить header с refresh-токеном)



ОПИСАНИЕ ПРИЛОЖЕНИЯ

- Реализована иерархия прав доступа
- Реализовано API для создания задач, которые закрепляются за пользователями, создания комментариев
- Реализованы возможности для управления чужими задачами или комментариями, если достаточно прав
- Распорядитель задачи (+sudo/admin) в праве обновлять ее полностью, удалять комментарии
- Исполнитель может оставить комментарий или обновить статус задачи
- Реализована система авторизации и аутентификации через jwt
- Реализована проверка входящих параметров
- Реализована возможность получения списков пользователей и задач
- Реализована возможность получения списка задач у пользователя как их создателя или исполнителя

